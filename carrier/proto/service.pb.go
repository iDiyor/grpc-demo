// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: service.proto

package carrier

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import context "golang.org/x/net/context"
import grpc "google.golang.org/grpc"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for CarrierService service

type CarrierServiceClient interface {
	CreateCarrier(ctx context.Context, in *CreateCarrierRequest, opts ...grpc.CallOption) (*Carrier, error)
}

type carrierServiceClient struct {
	cc *grpc.ClientConn
}

func NewCarrierServiceClient(cc *grpc.ClientConn) CarrierServiceClient {
	return &carrierServiceClient{cc}
}

func (c *carrierServiceClient) CreateCarrier(ctx context.Context, in *CreateCarrierRequest, opts ...grpc.CallOption) (*Carrier, error) {
	out := new(Carrier)
	err := grpc.Invoke(ctx, "/carrier.CarrierService/CreateCarrier", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for CarrierService service

type CarrierServiceServer interface {
	CreateCarrier(context.Context, *CreateCarrierRequest) (*Carrier, error)
}

func RegisterCarrierServiceServer(s *grpc.Server, srv CarrierServiceServer) {
	s.RegisterService(&_CarrierService_serviceDesc, srv)
}

func _CarrierService_CreateCarrier_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateCarrierRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CarrierServiceServer).CreateCarrier(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/carrier.CarrierService/CreateCarrier",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CarrierServiceServer).CreateCarrier(ctx, req.(*CreateCarrierRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _CarrierService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "carrier.CarrierService",
	HandlerType: (*CarrierServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateCarrier",
			Handler:    _CarrierService_CreateCarrier_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "service.proto",
}

func init() { proto.RegisterFile("service.proto", fileDescriptorService) }

var fileDescriptorService = []byte{
	// 119 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x2d, 0x4e, 0x2d, 0x2a,
	0xcb, 0x4c, 0x4e, 0xd5, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x4f, 0x4e, 0x2c, 0x2a, 0xca,
	0x4c, 0x2d, 0x92, 0xe2, 0x85, 0x32, 0x20, 0xe2, 0x46, 0x41, 0x5c, 0x7c, 0xce, 0x10, 0x81, 0x60,
	0x88, 0x7a, 0x21, 0x07, 0x2e, 0x5e, 0xe7, 0xa2, 0xd4, 0xc4, 0x92, 0x54, 0xa8, 0xb8, 0x90, 0xac,
	0x1e, 0x4c, 0x0b, 0x8a, 0x78, 0x50, 0x6a, 0x61, 0x69, 0x6a, 0x71, 0x89, 0x94, 0x00, 0x42, 0x1a,
	0x42, 0x3b, 0x09, 0x9c, 0x78, 0x24, 0xc7, 0x78, 0xe1, 0x91, 0x1c, 0xe3, 0x83, 0x47, 0x72, 0x8c,
	0x33, 0x1e, 0xcb, 0x31, 0x24, 0xb1, 0x81, 0x2d, 0x33, 0x06, 0x04, 0x00, 0x00, 0xff, 0xff, 0x9c,
	0xfe, 0x06, 0x46, 0x95, 0x00, 0x00, 0x00,
}
